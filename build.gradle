buildscript {
    ext.versions = [
            'minSdk'                : 14,
            'compileSdk'            : 28,
            'ndk'                   : '21.1.6352462',

            'androidPlugin'         : '4.1.2',
            'kotlinPlugin'          : '1.4.21',
            'codeQualityToolsPlugin': '0.20.0',

            'androidSupport'        : '28.0.0',
            'androidxTest'          : '1.3.0'
    ]

    repositories {
        mavenCentral()
        google()
        jcenter()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${versions.androidPlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlinPlugin}"
        classpath "com.vanniktech:gradle-code-quality-tools-plugin:${versions.codeQualityToolsPlugin}"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.vanniktech.code.quality.tools'

repositories {
    google()
    jcenter()
}

dependencies {
    implementation "com.android.support:support-annotations:${versions.androidSupport}"

    androidTestImplementation "androidx.test:runner:${versions.androidxTest}"
    androidTestImplementation "androidx.test:rules:${versions.androidxTest}"

}

android {
    compileSdkVersion versions.compileSdk
    ndkVersion versions.ndk

    defaultConfig {
        minSdkVersion versions.minSdk
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        externalNativeBuild {
            cmake {
                arguments '-DCMAKE_BUILD_TYPE=Release'
                cppFlags '-std=c++17'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }

    // TODO: build with optimizations in debug mode only
    externalNativeBuild {
        cmake {
            path "src/debug/cpp/CMakeLists.txt"
        }
    }
}

codeQualityTools {
    htmlReports = true
    cpd.enabled = false
    checkstyle {
        configFile = 'conf/checkstyle.xml'
    }
    pmd {
        version = '6.32.0'
        ruleSetFile = 'conf/pmd.xml'
    }
    detekt {
        config = 'conf/detekt.yml'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += '-Xno-param-assertions'
    }
}

